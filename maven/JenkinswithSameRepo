pipeline{
    agent any
    
    tools {
  maven 'maven3'
  'hudson.plugins.sonar.SonarRunnerInstallation' 'sonarQubeScanner'
}

    stages{
      
        
        stage("Maven version Stage"){
        steps{
        sh 'mvn -version'
        }
        }
        stage("maven clean"){
        steps{
          sh 'mvn -f maven/pom.xml clean package'
        }
        }
        stage("maven package"){
        steps{
          sh 'mvn -f maven/pom.xml clean package'
        }
        }
        stage("maven test"){
        steps{
          sh 'mvn -f maven/pom.xml clean package'
        }
        }
        stage("maven install"){
        steps{
          sh 'mvn -f maven/pom.xml clean package'
        }
        }
        stage("sonajenkins"){
        steps{
           withCredentials([string(credentialsId: 'sonar-jenkins', variable: '')]) {
            sh 'mvn -f maven/pom.xml clean install package sonar:sonar'

        }
        }
        }
        stage("jfrogjenkins"){
        steps{
          rtUpload (
    serverId: 'jfrog_jenk_artifactory',
    spec: '''{
          "files": [
            {
              "pattern": "maven/target/*.jar",
              "target": "libs-snapshot-local/com/devopspract/DevopsMaven/1.0-SNAPSHOT/"
            }
         ]
    }''',
 
)
        }
        }
        stage("publish artifactory to jfrog"){
        steps{
        rtPublishBuildInfo (
    serverId: 'jfrog_jenk_artifactory',
    
)
        }
        }
    }
}
